//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class IGame3D_CommonUtilsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(IGame3D.CommonUtils), typeof(System.Object));
		L.RegFunction("GetUpdatePath", GetUpdatePath);
		L.RegFunction("GetLuaPath", GetLuaPath);
		L.RegFunction("New", _CreateIGame3D_CommonUtils);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateIGame3D_CommonUtils(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				IGame3D.CommonUtils obj = new IGame3D.CommonUtils();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: IGame3D.CommonUtils.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUpdatePath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = IGame3D.CommonUtils.GetUpdatePath();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLuaPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			System.Collections.Generic.List<string> o = IGame3D.CommonUtils.GetLuaPath();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

